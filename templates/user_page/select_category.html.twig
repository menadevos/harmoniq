{% extends 'base.html.twig' %}

{% block title %}Select {{ category }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'silk': {
                            50: '#F7F3F5',
                            100: '#EDE0E8',
                            200: '#DBC4D4',
                            300: '#C9A4B9',
                            400: '#B7849E',
                            500: '#A56684',
                            600: '#8C4F6B',
                            700: '#733A52',
                            800: '#5A2639',
                            900: '#411320'
                        }
                    }
                }
            }
        }
    </script>
{% endblock %}

{% block body %}
<div class="min-h-screen bg-silk-50 flex items-center justify-center p-6">
    <div class="w-full max-w-2xl bg-white shadow-2xl rounded-3xl overflow-hidden">
        <div class="bg-silk-500 p-6 text-center rounded-t-3xl">
            <h2 class="text-3xl font-bold text-white drop-shadow-md">
                Select {{ category | capitalize }} for "{{ eventSelection.eventType }}" üéâ
            </h2>
        </div>

        <form method="POST" class="p-6 space-y-6">
            <!-- Category Selection -->
            <div>
                <label for="selection" class="block text-sm font-medium text-silk-700 mb-2">
                    Choose an option:
                </label>
                <select id="selection" name="selection" required 
                    class="w-full px-4 py-3 border border-silk-300 rounded-xl focus:ring-2 focus:ring-silk-500 focus:border-silk-500 transition-all duration-300">
                    <option value="">-- Select an option --</option>
                    {% for option in options %}
                        <option value="{{ option }}">{{ option }}</option>
                    {% endfor %}
                </select>
            </div>

            <!-- Restaurant Selection (Only for Food Category) -->
            {% if category == 'Food' %}
                <div>
                    <label for="restaurant" class="block text-sm font-medium text-silk-700 mb-2">
                        Select a restaurant:
                    </label>
                    <select id="restaurant" name="restaurant" required 
                        class="w-full px-4 py-3 border border-silk-300 rounded-xl focus:ring-2 focus:ring-silk-500 focus:border-silk-500 transition-all duration-300">
                        <option value="">-- Select a restaurant --</option>
                        {% for restaurant, menu in restaurants %}
                            <option value="{{ restaurant | lower | replace({' ': '-'}) }}">{{ restaurant }}</option>
                        {% endfor %}
                    </select>
                </div>

                <!-- Restaurant Menus -->
                <div id="restaurant-list">
                    {% for restaurant, menu in restaurants %}
                        <div id="menu-{{ restaurant | lower | replace({' ': '-'}) }}" class="restaurant-menu hidden bg-silk-100 p-4 rounded-lg shadow-md mb-4">
                            <h4 class="text-lg font-bold text-silk-700">{{ restaurant }}</h4>
                            <ul class="space-y-2">
                                {% for dish, price in menu %}
                                    <li>
                                        <div class="flex justify-between items-center">
                                            <span>{{ dish }} - ${{ price }}</span>
                                            <input type="number" name="quantity[{{ restaurant }}][{{ dish }}]" value="0" min="0" 
                                                data-price="{{ price }}" 
                                                class="w-16 px-2 py-1 border border-silk-300 rounded-md focus:ring-2 focus:ring-silk-500 focus:border-silk-500 quantity-input">
                                        </div>
                                    </li>
                                {% endfor %}
                            </ul>
                        </div>
                    {% endfor %}
                </div>

                <!-- Total Price Display -->
                <div id="total-price" class="mt-4 text-xl font-semibold text-silk-700">
                    <p>Total Price: $<span id="price-value">0</span></p>
                </div>
            {% endif %}

            <!-- Extras Section -->
            {% if extras is defined and extras|length > 0 %}
                <div>
                    <h3 class="text-xl font-semibold text-silk-700 mb-4">Extras for {{ category }}</h3>
                    <ul class="space-y-2">
                        {% for extra, price in extras %}
                            <li>
                                <label class="flex items-center space-x-2">
                                    <input type="checkbox" name="extras[]" value="{{ extra }}" 
                                           class="form-checkbox h-5 w-5 text-silk-500 rounded focus:ring-silk-500"
                                           data-price="{{ price }}">
                                    <span class="text-silk-700">{{ extra }} - ${{ price }}</span>
                                </label>
                            </li>
                        {% endfor %}
                    </ul>
                </div>

                <!-- Extras Total Price Display -->
                <div id="extras-total" class="mt-4 text-xl font-semibold text-silk-700">
                    <p>Total Extras Price: $<span id="extras-total-price">0</span></p>
                </div>
            {% endif %}

            <!-- Comment Section -->
            <div>
                <label for="comment" class="block text-sm font-medium text-silk-700 mb-2">
                    Leave a Comment
                </label>
                <textarea name="comment" id="comment" rows="4" 
                    class="w-full px-4 py-3 border border-silk-300 rounded-xl focus:ring-2 focus:ring-silk-500 focus:border-silk-500 transition-all duration-300" 
                    placeholder="Write your thoughts..."></textarea>
            </div>

            <!-- Submit Button -->
            <button type="submit" 
                class="w-full bg-silk-500 text-white py-4 rounded-xl hover:bg-silk-600 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-2xl">
                Save Selection & Submit Comment
            </button>
        </form>

        <!-- Back to Dashboard Link -->
        <div class="p-6 text-center">
            <a href="{{ path('user_dashboard', {eventId: eventSelection.id}) }}" 
                class="text-silk-700 hover:text-silk-900 font-medium transition-all duration-300">
                ‚Üê Back to Dashboard
            </a>
        </div>
    </div>
</div>

<script>
    // Function to update the total price based on selected quantities
    function updateTotalPrice() {
        let total = 0;
        document.querySelectorAll('.quantity-input').forEach(input => {
            let price = parseFloat(input.getAttribute('data-price'));
            let quantity = parseInt(input.value);
            total += price * quantity;
        });
        document.getElementById('price-value').textContent = total.toFixed(2);
    }

    // Add event listeners to quantity inputs
    document.querySelectorAll('.quantity-input').forEach(input => {
        input.addEventListener('input', updateTotalPrice);
    });

    // Function to update the total price of selected extras
    function updateExtrasTotalPrice() {
        let total = 0;
        document.querySelectorAll('input[name="extras[]"]:checked').forEach(checkbox => {
            const price = parseFloat(checkbox.getAttribute('data-price'));
            total += price;
        });
        document.getElementById('extras-total-price').textContent = total.toFixed(2);
    }

    // Add event listeners to extras checkboxes
    document.querySelectorAll('input[name="extras[]"]').forEach(checkbox => {
        checkbox.addEventListener('change', updateExtrasTotalPrice);
    });

    // Function to show the menu of the selected restaurant
    document.getElementById('restaurant').addEventListener('change', function() {
        const selectedRestaurant = this.value; // Get the selected restaurant value
        const restaurantMenus = document.querySelectorAll('.restaurant-menu'); // Get all restaurant menus

        // Hide all menus
        restaurantMenus.forEach(menu => {
            menu.classList.add('hidden');
        });

        // Show the selected restaurant's menu
        if (selectedRestaurant) {
            const selectedMenu = document.getElementById(`menu-${selectedRestaurant}`);
            if (selectedMenu) {
                selectedMenu.classList.remove('hidden');
            }
        }

        // Reset total price when changing restaurant
        updateTotalPrice();
    });

    // Initial calculations
    updateTotalPrice();
    updateExtrasTotalPrice();
</script>
{% endblock %}